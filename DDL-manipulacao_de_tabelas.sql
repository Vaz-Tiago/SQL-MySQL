-- DDL CRIANDO TABELA
CREATE TABLE funcionario
(
	matricula 	INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    nome		VARCHAR (50) NOT NULL,
    sobrenome	VARCHAR (50) NOT NULL,
    endereco	VARCHAR (50),
    cidade		VARCHAR (50),
    pais		VARCHAR (25),
    data_nasc	DATETIME
);


-- DDL CRIANDO TABELA COM CHAVE ESTRANGEIRA
CREATE TABLE salario
(
	matricula INT NOT NULL,
    salario DECIMAL(10,2) NOT NULL,
		FOREIGN KEY (matricula) REFERENCES funcionario(matricula)
);


-- DDL CRIAÇÃO DE TABELA COM CHAVE PRIMARIA
CREATE TABLE audit_salario
(
	transacao	INT NOT NULL AUTO_INCREMENT,
    matricula	INT NOT NULL,
    data_trans	DATETIME NOT NULL,
    sal_antigo	DECIMAL(10,2),
    sal_novo	DECIMAL(10,2),
    Usuario		VARCHAR(20) NOT NULL,
    PRIMARY KEY (transacao),
    FOREIGN KEY (matricula) REFERENCES funcionario(matricula)
);


-- DDL CRIACAO DE INDEX (IMPORTANTE PARA OTIMIZAR CONSULTA) É IMPORTANTE DEFINIR
-- EM CAMPOS QUE SÃO MAIS SUCETIVEIS A CONSULTAS. 
-- CHAVES PRIMÁRIAS JÁ SÃO AUTOMATICAMENTE INDEXADOS
CREATE INDEX ix_func1 ON funcionario(data_nasc);

-- NO EXEMPLO ACIMA, ix_func1 É O NOME DO INDEX, PODE SER DADO O NOME QUE QUISER
-- ON - SIGNIFICA QUE É NA TABELA FUNCIONARIO(CAMPO)
CREATE INDEX ix_func2 ON funcionario(cidade,pais);


-- ADICIONAR NOVO CAMPO NA TABELA (ALTERAR) ADICIONAR UM CAMPO (COLUNA)
ALTER TABLE funcionario ADD genero CHAR(1);


-- RENOMEANDO CAMPO (COLUNA)
ALTER TABLE funcionario CHANGE genero sexo CHAR(1);


-- APÓS O CHANGE, COLOCAR O CAMPO A SER ALTERADO E DEPOIS A ALTERAÇÃO A SER FEITA.
-- NO CASO MUDOU O CAMPO GENERO QUE PQASSOU A SE CHAMAR SEXO
ALTER TABLE funcionario CHANGE sexo genero CHAR(1);


-- RENOMEANDO TABELA
RENAME TABLE funcionario TO pessoa;

RENAME TABLE pessoa TO funcionario;


-- DDL PARA ADICIONAR COLUNA NA TABELA SENSO
ALTER TABLE senso ADD ID INT;


-- DDL PARA ADICIONAR CHAVE PRIMARIA E AUTO_INCREMENT NA COLUNA ADICIONADA
-- MODIFICANDO ESPECIFICAÇÕES DA COLUNA.
ALTER TABLE senso MODIFY COLUMN ID INT AUTO_INCREMENT PRIMARY KEY;


-- ALTERANDO O TIPO DA COLUNA
ALTER TABLE funcionario MODIFY COLUMN endereco VARCHAR(30);


-- EXCLUINDO CAMPO (COLUNA)  da TABELA
ALTER TABLE funcionario DROP COLUMN genero;


-- ALTERAR ENGINE DA TABELA
ALTER TABLE senso
ENGINE = MyIsam;


-- DDL PARA CRIAR O DATABASE
CREATE DATABASE TESTE;


-- DDL PARA EXCLUIR O DATABASE
DROP DATABASE TESTE;


-- EXCLUIR TABELA
DROP TABLE salario;


-- CRIANDO VIEWS
CREATE VIEW v_funcionario
	AS
    SELECT * FROM funcionarios    
    
    
-- MODIFICANDO VIEW
-- ALTER VIEW
ALTER VIEW v_funcionario
	AS
    SELECT ID, NOME FROM funcionarios;
    
    
-- EXCLUIR VIEW
DROP VIEW v_funcionario


-- EXCLUINDO INDEX
DROP INDEX ix_func1 ON funcionario;


-- CRIANDO INDEX
CREATE INDEX ix_func1 ON funcionarios (NOME);


-- CRIANDO PROCEDURE
DELIMITER $$
CREATE PROCEDURE proc_quadrado (INOUT numero INT)
BEGIN
	SET numero = numero * numero;
END $$
DELIMITER;


-- EXECUTANDO PROCEDURE
SET @valor = 5;
CALL proc_quadrado (@valor);
SELECT @valor;


-- EXCLUINDO PROCEDURE
DROP PROCEDURE proc_quadrado;


-- EXCLUINDO FUNCAO
DROP FUNCTION func_salario;


-- EXCLUINDO TRIGGER
DROP TRIGGER trig_func_salario;


-- DDL TRUNCATE (TRUNCETE APAGA OS REGISTROS DA TABELA DE FORMA MAIS RAPIDA E EFICIENTE)
-- POIS ALEM DE APAGAR AS INFORMAÇÕES, TAMBÉM APAGA TODO ESPAÇO ALOCADO NA MEMORIA QUE ELA OCUPAVA
TRUNCATE TABLE funcionarios;


-- APLICANDO TRUNCATE (CRIANDO TABELA TEMPORARIA PARA ISSO)
SELECT * FROM funcionarios;


-- CRIANDO TABELA TEMPORARIA PARA FAZER BACKUP DOS DADOS
-- TABELAS TEMPORARIAS SÓ FICAM ATIVAS ENQUANTO A SESSÃO ESTIVER ABERTA,
-- AO FECHAR O PROGRAMA ELA É EXCLUIDA.
CREATE TEMPORARY TABLE TMP_FUNCIONARIOS
(
	ID INT,
    NOME VARCHAR(50),
    SALARIO DECIMAL(10,2),
    SETOR VARCHAR (30)
)


-- FAZENDO O BK NA TABELA TEMPORARIA
-- (INSERIR TODOS DADOS NA NOVA TABELA DE UMA VEZ)
INSERT INTO TMP_FUNCIONARIOS
SELECT * FROM funcionarios


-- CONFERINDO RESULTADO
SELECT * FROM TMP_FUNCIONARIOS


-- PAAGANDO OS REGISTROS
TRUNCATE funcionarios


-- RECUPERANDO OS DADOS DA TABELA TEMP

-- DESATIVAR AUTO INCREMENT DA TABELA FUNCIONARIOS
-- ESSE CAMPO VOLTA AO NORMAL APÓS A RECUPERAÇÃO DOS DADOS
-- CASO ESSE PROCEDIMENTO NÃO FOR REALIZADO CAUSA UMA INCONSISTENCIA GENERALIZADA NOS DADOS
-- POIS O FUNCIONARIO QUE TINHA O ID 1, PASSA A RECEBER OUTRO ID, DANDO CONFLITO COM O RESTANTE DAS
-- TABELAS ONDE É MENCIONADO
ALTER TABLE funcionarios CHANGE ID ID INT UNSIGNED NOT NULL;


-- RECUPERANDO DADOS DO BK
INSERT INTO funcionarios
SELECT * FROM TMP_FUNCIONARIOS


-- REVERTENDO E DEFININDO NOVAMENTE O AUTO_INCREMENT NO CAMPO ID
ALTER TABLE funcionarios CHANGE ID ID INT AUTO_INCREMENT;


-- EVIDENCIANDO AS MUDANÇAS E ADICIONANDO UM NOVO REGISTRO PARA TESTE
SELECT * FROM funcionarios
INSERT INTO funcionarios (nome, salario) VALUES ('Leopoldo', 1000);